---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: cluster-collector
  name: cluster-collector
  namespace: checkmk-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: checkmk-cluster-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: checkmk-collectors-podsecurity
subjects:
  - kind: ServiceAccount
    name: cluster-collector
    namespace: checkmk-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: checkmk-token-review
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: cluster-collector
    namespace: checkmk-monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  name: cluster-collector
  namespace: checkmk-monitoring
  labels:
    app: cluster-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-collector
  template:
    metadata:
      labels:
        app: cluster-collector
    spec:
      containers:
        - name: cluster-collector
          image: lisapichlertribe29/kubernetes-collector:2.1.0i1
          imagePullPolicy: Always
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CLUSTER_COLLECTOR_KEYPASS
              valueFrom:
                secretKeyRef:
                  name: cluster-collector-secret
                  key: cluster-collector-keypass
          volumeMounts:
            - name: cluster-collector-key
              mountPath: /etc/ca-certificates/cluster-collector-key.pam
              subPath: cluster-collector-key.pam
              readOnly: true
            - name: cluster-collector-cert
              mountPath: /etc/ca-certificates/cluster-collector-cert.pam
              subPath: cluster-collector-cert.pam
              readOnly: true
          livenessProbe:
            httpGet:
              path: /health
              port: api
              httpHeaders:
                - name: status
                  value: available
              # HTTP:
              # scheme: HTTP
              scheme: HTTPS
            initialDelaySeconds: 3
            periodSeconds: 10
          command:
            - "/usr/local/bin/checkmk-cluster-collector"
          # HTTP:
          # args:
          #   - "--host=0.0.0.0"
          args:
            - "--host=0.0.0.0"
            - "--ssl-keyfile=/etc/ca-certificates/cluster-collector-key.pam"
            - "--ssl-keyfile-password=$(CLUSTER_COLLECTOR_KEYPASS)"
            - "--ssl-certfile=/etc/ca-certificates/cluster-collector-cert.pam"
            - "--secure-protocol"
            - "--reader-whitelist=checkmk-monitoring:checkmk"
            - "--writer-whitelist=checkmk-monitoring:node-collector-cadvisor"
          ports:
            - containerPort: 10050
              name: api
              protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: 2000Mi
            requests:
              cpu: 150m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
      serviceAccountName: cluster-collector
      volumes:
        - name: cluster-collector-key
          secret:
            secretName: cluster-collector-secret
            items:
              - key: cluster-collector-key
                path: cluster-collector-key.pam
        - name: cluster-collector-cert
          secret:
            secretName: cluster-collector-secret
            items:
              - key: cluster-collector-cert
                path: cluster-collector-cert.pam
