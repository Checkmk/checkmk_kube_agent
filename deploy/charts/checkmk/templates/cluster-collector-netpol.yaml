{{- if .Values.networkPolicy.enabled }}
---
# Deny all incoming/outgoing traffic to/from cluster-collector
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "checkmk.fullname" . }}-cluster-collector-deny-all
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "checkmk.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      component: {{ include "checkmk.fullname" . }}-cluster-collector
  policyTypes:
    - Ingress
    - Egress
  ingress: []
  egress: []
---
# Allow incoming traffic from node-collector to cluster-collector
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "checkmk.fullname" . }}-cluster-collector-allow-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "checkmk.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      component: {{ include "checkmk.fullname" . }}-cluster-collector
  policyTypes:
    - Ingress
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: {{ .Release.Namespace }}
        podSelector:
          matchLabels:
            component: {{ include "checkmk.fullname" . }}-node-collector
---
# Allow outgoing traffic from cluster-collector to apiserver (delegated authentication and authorization checks)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "checkmk.fullname" . }}-cluster-collector-allow-egress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "checkmk.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      component: {{ include "checkmk.fullname" . }}-cluster-collector
  policyTypes:
    - Egress
  egress:
    {{- if .Values.networkPolicy.egressKubeApiserver.enableCidrLookup }}
    {{- range $subset := (lookup "v1" "Endpoints" "default" "kubernetes").subsets }}
    {{- range $address := $subset.addresses }}
    {{- range $port := $subset.ports }}
    - to:
      - ipBlock:
          cidr: "{{ $address.ip }}/32"
      ports:
      - protocol: TCP
        port: {{ $port.port }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- else if .Values.networkPolicy.egressKubeApiserver.ipBlockCidr }}
    - to:
      - ipBlock:
          cidr: "{{ .Values.networkPolicy.egressKubeApiserver.ipBlockCidr }}"
      ports:
      - protocol: TCP
        port: {{ .Values.networkPolicy.egressKubeApiserver.port }}
    {{- else }}
    - to:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: {{ .Values.networkPolicy.egressKubeApiserver.labelSelectors.namespace }}
        podSelector:
          matchLabels:
            {{ .Values.networkPolicy.egressKubeApiserver.labelSelectors.key }}: {{ .Values.networkPolicy.egressKubeApiserver.labelSelectors.value }}
    {{- end }}
{{- if gt (len .Values.networkPolicy.allowIngressFromCIDRs) 0 }}
---
# Allow certain incoming traffic as specified in values.yaml, e.g. from Checkmk monitoring server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "checkmk.fullname" . }}-cluster-collector-allow-ingress-custom
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "checkmk.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      component: {{ include "checkmk.fullname" . }}-cluster-collector
  policyTypes:
    - Ingress
  ingress:
    - from:
      {{- range $v := .Values.networkPolicy.allowIngressFromCIDRs }}
      - ipBlock:
          cidr: '$v'
      {{- end }}
{{- end }}
{{- end }}