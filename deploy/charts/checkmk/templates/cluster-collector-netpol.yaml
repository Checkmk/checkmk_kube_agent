{{- if .Values.networkPolicy.enabled }}
---
# Deny all incoming/outgoing traffic to/from cluster-collector
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "checkmk.fullname" . }}-cluster-collector-deny-all
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "checkmk.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      component: {{ include "checkmk.fullname" . }}-cluster-collector
  policyTypes:
    - Ingress
    - Egress
  ingress: []
  egress: []
---
# Allow incoming traffic from node-collector to cluster-collector
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "checkmk.fullname" . }}-cluster-collector-allow-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "checkmk.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      component: {{ include "checkmk.fullname" . }}-cluster-collector
  policyTypes:
    - Ingress
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: {{ .Release.Namespace }}
        podSelector:
          matchLabels:
            component: {{ include "checkmk.fullname" . }}-node-collector
{{- if gt (len .Values.networkPolicy.allowIngressFromCIDRs) 0 }}
---
# Allow certain incoming traffic as specified in values.yaml, e.g. from Checkmk monitoring server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "checkmk.fullname" . }}-cluster-collector-allow-ingress-custom
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "checkmk.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      component: {{ include "checkmk.fullname" . }}-cluster-collector
  policyTypes:
    - Ingress
  ingress:
    - from:
      {{- range $v := .Values.networkPolicy.allowIngressFromCIDRs }}
      - ipBlock:
          cidr: '$v'
      {{- end }}
{{- end }}
{{- end }}