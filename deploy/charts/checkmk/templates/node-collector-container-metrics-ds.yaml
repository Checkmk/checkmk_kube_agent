---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "checkmk.fullname" . }}-node-collector-container-metrics
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "checkmk.labels" . | nindent 4 }}
    component: {{ include "checkmk.fullname" . }}-node-collector
    app: {{ include "checkmk.fullname" . }}-node-collector-container-metrics
    # This label allows checkmk to identify the node-collector. Removing or modifying this label
    # is supported, but will remove features related to this label.
    node-collector: "container-metrics"
spec:
  selector:
    matchLabels:
      {{- include "checkmk.selectorLabels" . | nindent 6 }}
      component: {{ include "checkmk.fullname" . }}-node-collector
      app: {{ include "checkmk.fullname" . }}-node-collector-container-metrics
  minReadySeconds: {{ .Values.nodeCollector.minReadySeconds }}
  template:
    metadata:
      annotations:
        {{- if .Values.tlsCommunication.enabled }}
        checksum/config: {{ include (print $.Template.BasePath "/checkmk-secret.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.nodeCollector.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "checkmk.selectorLabels" . | nindent 8 }}
        component: {{ include "checkmk.fullname" . }}-node-collector
        app: {{ include "checkmk.fullname" . }}-node-collector-container-metrics
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeCollector.priorityClassName }}
      priorityClassName: {{ .Values.nodeCollector.priorityClassName }}
      {{- end }}
      {{- if .Values.nodeCollector.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeCollector.nodeSelector | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeCollector.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "checkmk.serviceAccountName.nodeCollector.containerMetricsCollector" . }}
      securityContext:
        {{- toYaml .Values.nodeCollector.podSecurityContext | nindent 8 }}
      automountServiceAccountToken: true
      containers:
        - name: cadvisor
          securityContext:
            {{- toYaml .Values.nodeCollector.cadvisor.securityContext | nindent 12 }}
          image: "{{ .Values.nodeCollector.cadvisor.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.nodeCollector.cadvisor.image.pullPolicy }}
          command:
            - "/usr/bin/cadvisor"
          args:
          {{- with .Values.nodeCollector.cadvisor.additionalArgs }}
            {{ toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.nodeCollector.cadvisor.resources | nindent 12 }}
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          volumeMounts:
            - name: no-api-access
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              readOnly: true
            - name: var-run
              mountPath: /var/run
              # readOnly: true # needs to be disabled, otherwise we cannot deny api-access
            - name: sys
              mountPath: /sys
              readOnly: true
            - name: docker
              mountPath: /var/lib/docker
              readOnly: true
        - name: container-metrics-collector
          securityContext:
            {{- toYaml .Values.nodeCollector.containerMetricsCollector.securityContext | nindent 12 }}
          image: "{{ .Values.nodeCollector.containerMetricsCollector.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.nodeCollector.containerMetricsCollector.image.pullPolicy }}
          command:
            - "/usr/local/bin/checkmk-container-metrics-collector"
          args:
            - "--log-level={{ .Values.nodeCollector.logLevel }}"
          {{- if .Values.tlsCommunication.enabled }}
            - "--secure-protocol"
          {{- if .Values.tlsCommunication.verifySsl }}
            - "--verify-ssl"
          {{- end }}
          {{- end }}
          {{- if .Values.tlsCommunication.enabled }}
          volumeMounts:
            - name: checkmk-ca-cert
              mountPath: /etc/ca-certificates/checkmk-ca-cert.pem
              subPath: checkmk-ca-cert.pem
              readOnly: true
          {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CLUSTER_COLLECTOR_SERVICE_HOST
              value: "{{ include "checkmk.fullname" . }}-cluster-collector.{{ .Release.Namespace }}"
            - name: CLUSTER_COLLECTOR_SERVICE_PORT_API
              value: "{{ .Values.clusterCollector.service.port }}"
          resources:
            {{- toYaml .Values.nodeCollector.containerMetricsCollector.resources | nindent 12 }}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: no-api-access
          emptyDir: {}
        - name: var-run
          hostPath:
            path: /var/run
        - name: sys
          hostPath:
            path: /sys
        - name: docker
          hostPath:
            path: /var/lib/docker
      {{- if .Values.tlsCommunication.enabled }}
        - name: checkmk-ca-cert
          secret:
            secretName: {{ include "checkmk.fullname" . }}-checkmk-tls
            items:
              - key: checkmk-ca-cert
                path: checkmk-ca-cert.pem
      {{- end }}
