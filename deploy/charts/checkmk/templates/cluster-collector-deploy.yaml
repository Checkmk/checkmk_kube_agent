---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "checkmk.fullname" . }}-cluster-collector
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "checkmk.labels" . | nindent 4 }}
    app: {{ include "checkmk.fullname" . }}-cluster-collector
    component: {{ include "checkmk.fullname" . }}-cluster-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "checkmk.selectorLabels" . | nindent 6 }}
      app: {{ include "checkmk.fullname" . }}-cluster-collector
      component: {{ include "checkmk.fullname" . }}-cluster-collector
  template:
    metadata:
      annotations:
        {{- if .Values.tlsCommunication.enabled }}
        checksum/config: {{ include (print $.Template.BasePath "/checkmk-secret.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.clusterCollector.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "checkmk.selectorLabels" . | nindent 8 }}
        app: {{ include "checkmk.fullname" . }}-cluster-collector
        component: {{ include "checkmk.fullname" . }}-cluster-collector
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "checkmk.serviceAccountName.clusterCollector" . }}
      securityContext:
        {{- toYaml .Values.clusterCollector.podSecurityContext | nindent 8 }}
      containers:
        - name: cluster-collector
          securityContext:
            {{- toYaml .Values.clusterCollector.securityContext | nindent 12 }}
          image: "{{ .Values.clusterCollector.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.clusterCollector.image.pullPolicy }}
          command:
            - "/usr/local/bin/checkmk-cluster-collector"
          args:
            - "--log-level={{ .Values.clusterCollector.logLevel }}"
            - "--host=0.0.0.0"
            - "--reader-whitelist={{ .Release.Namespace }}:{{ template "checkmk.serviceAccountName.checkmk" . }}"
            - "--writer-whitelist={{ .Release.Namespace }}:{{ template "checkmk.serviceAccountName.nodeCollector.containerMetricsCollector" . }},{{ .Release.Namespace }}:{{ template "checkmk.serviceAccountName.nodeCollector.machineSectionsCollector" . }}"
          {{- if .Values.tlsCommunication.enabled }}
            - "--ssl-keyfile=/etc/ca-certificates/cluster-collector-key.pem"
            - "--ssl-certfile=/etc/ca-certificates/cluster-collector-cert.pem"
            - "--secure-protocol"
          {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          livenessProbe:
            httpGet:
              path: /health
              port: api
              httpHeaders:
                - name: status
                  value: available
              {{- if .Values.tlsCommunication.enabled }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: {{ .Values.clusterCollector.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.clusterCollector.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.clusterCollector.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.clusterCollector.livenessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.clusterCollector.resources | nindent 12 }}
          ports:
            - containerPort: 10050
              name: api
              protocol: TCP
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          {{- if .Values.tlsCommunication.enabled }}
            - name: cluster-collector-key
              mountPath: /etc/ca-certificates/cluster-collector-key.pem
              subPath: cluster-collector-key.pem
              readOnly: true
            - name: cluster-collector-cert
              mountPath: /etc/ca-certificates/cluster-collector-cert.pem
              subPath: cluster-collector-cert.pem
              readOnly: true
          {{- end }}
      volumes:
        # gunicorn needs a writeable /tmp and runs best with ram backed /tmp
        # https://docs.gunicorn.org/en/latest/faq.html#blocking-os-fchmod
        - name: tmp
          emptyDir:
            medium: Memory
      {{- if .Values.tlsCommunication.enabled }}
        - name: cluster-collector-key
          secret:
            secretName: {{ include "checkmk.fullname" . }}-checkmk-tls
            items:
              - key: cluster-collector-key
                path: cluster-collector-key.pem
        - name: cluster-collector-cert
          secret:
            secretName: {{ include "checkmk.fullname" . }}-checkmk-tls
            items:
              - key: cluster-collector-cert
                path: cluster-collector-cert.pem
      {{- end }}
      {{- with .Values.clusterCollector.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.clusterCollector.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.clusterCollector.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
