---
- name: "Post Tasks on Master."
  hosts: kubernetes_master
  remote_user: "{{ ansible_ssh_remote_user }}"
  become: 'yes'
  tags: [always, post]
  tasks:
    - name: "Ensure Python libraries are installed."
      ansible.builtin.pip:
        name:
          - kubernetes >= 12.0.0
          - PyYAML >= 3.11
          - jsonpatch
    - name: "Upload Workloads."
      ansible.builtin.copy:
        src: "{{checkmk_kube_agent_path}}/deploy/kubernetes/{{ item }}"
        dest: "/root/{{ item }}"
      loop: "{{ kubernetes_workloads }}"
    - name: "Apply Workloads to Cluster."
      kubernetes.core.k8s:
        state: present
        src: "/root/{{ item }}"
      loop: "{{ kubernetes_workloads }}"
    - name: "Download Kubernetes Auth Files."
      ansible.builtin.fetch:
        src: "/etc/kubernetes/admin.conf"
        dest: "/tmp/kube-config"
    - name: "Get token."
      ansible.builtin.shell:
        cmd: "kubectl get secret $(kubectl get serviceaccount checkmk -o=jsonpath='{.secrets[*].name}' -n checkmk-monitoring) -n checkmk-monitoring -o=jsonpath='{.data.token}' | base64 --decode"
      register: shell_token

    - name: "Write INI file."
      become: 'no'
      community.general.ini_file:
        path: "{{ checkmk_kube_agent_path }}/kubernetes-master.ini"
        section: "{{ item.section }}"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        state: present
        create: 'yes'
      with_items:
        - { section: "kubernetes-master", option: "master_node", value: "{{ hostvars[inventory_hostname].ansible_host }}" }
        - { section: "kubernetes-master", option: "token", value: "{{ shell_token.stdout }}" }
      delegate_to: localhost
      run_once: 'yes'

- name: "Writing nodes INI file."
  hosts: kubernetes_nodes
  remote_user: "{{ ansible_ssh_remote_user }}"
  tags: [always, post]
  tasks:
    - name: "Write INI file."
      community.general.ini_file:
        path: "{{ checkmk_kube_agent_path }}/kubernetes-nodes.ini"
        section: "kubernetes-worker"
        option: "{{ inventory_hostname }}"
        value: "{{ hostvars[inventory_hostname].ansible_host }}"
        state: present
        create: 'yes'
      delegate_to: localhost

- name: "Wrapping up."
  hosts: all
  remote_user: "{{ ansible_ssh_remote_user }}"
  tags: [always, post]
  tasks:
    - name: "Print information about servers."
      ansible.builtin.debug:
        msg:
          - "Role: {{ kubernetes_role }} | Kubernetes Version: {{ kubernetes_version }}"
          - "API Connection:"
          - "https://{{ inventory_hostname }}:6443"
          - "SSH Connection (from the ansible directory):"
          - "ssh -i {{ ansible_ssh_private_key_file }} {{ ansible_ssh_remote_user }}@{{ inventory_hostname }}"
